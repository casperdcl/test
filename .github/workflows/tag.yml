name: Tag
on:
  issue_comment:
    types: [created, edited]
  pull_request_review_comment:
    types: [created, edited]

jobs:
  tag:  # /tag <tagname> <commit>
    if: startsWith(github.event.comment.body, '/tag ')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: React Seen
      uses: actions/github-script@v2
      with:
        script: |
          const perm = await github.repos.getCollaboratorPermissionLevel({
            owner: context.repo.owner, repo: context.repo.repo,
            username: context.payload.comment.user.login})
          post = (context.eventName == "issue_comment"
            ? github.reactions.createForIssueComment
            : github.reactions.createForPullRequestReviewComment)

          if (!["admin", "write"].includes(perm.data.permission)){
            post({
              owner: context.repo.owner, repo: context.repo.repo,
              comment_id: context.payload.comment.id, content: "laugh"})
            throw "Permission denied for user " + context.payload.comment.user.login
          }
          post({
            owner: context.repo.owner, repo: context.repo.repo,
            comment_id: context.payload.comment.id, content: "eyes"})
    - name: Tag Commit
      run: |
        git clone https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY} repo
        git -C repo tag $(echo "$BODY" | awk '{print $2" "$3}')
        git -C repo push --tags
        rm -rf repo
      env:
        BODY: ${{ github.event.comment.body }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        #GIT_COMMITTER_NAME: tag-bot
        #GIT_AUTHOR_NAME: tag-bot
        #GIT_COMMITTER_EMAIL: casperdcl@noreply.github.com
        #GIT_AUTHOR_EMAIL: casperdcl@noreply.github.com
    - name: React Success
      uses: actions/github-script@v2
      with:
        script: |
          post = (context.eventName == "issue_comment"
            ? github.reactions.createForIssueComment
            : github.reactions.createForPullRequestReviewComment)
          post({
            owner: context.repo.owner, repo: context.repo.repo,
            comment_id: context.payload.comment.id, content: "rocket"})
  always:
    runs-on: ubuntu-latest
    steps:
    - run: echo prevent failure when other jobs are skipped
